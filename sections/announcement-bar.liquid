<div class="announcement-bar-container container-{{ section.settings.blocks_type }} color-{{ section.settings.color_scheme }} gradient"
     role="region"
     aria-label="{{ 'sections.header.announcement' | t }}" {{ section.shopify_attributes }}
     data-delay="{{ section.settings.animation-delay }}" data-duration="{{ section.settings.animation-duration }}">
    {%- for block in section.blocks -%}
        {%- case block.type -%}
            {%- when 'announcement' -%}
                <div class="announcement-bar color-{{ block.settings.color_scheme }} gradient {% if block.settings.show_mobile %} show-mobile{% endif %} announcement-bar-{{ forloop.index0 }} {% if forloop.index0 == 0 %}active{% endif %}"
                     role="region"
                     aria-label="{{ 'sections.header.announcement' | t }}" {{ block.shopify_attributes }}>
                    {%- if block.settings.text != blank -%}
                        {%- if block.settings.link != blank -%}
                            <a href="{{ block.settings.link }}" class="announcement-bar__link link link--text focus-inset animate-arrow">
                        {%- endif -%}
                        <div class="page-width">
                            <div class="announcement-bar__message {{ block.settings.text_alignment }} rtl">
                                {{ block.settings.text }}
                            </div>
                        </div>
                        {%- if block.settings.link != blank -%}
                            </a>
                        {%- endif -%}
                    {%- endif -%}
                </div>
        {%- endcase -%}
    {%- endfor -%}
</div>

{% javascript %}

$(document).ready(function() {

// CUSTOM SCRIPTS (by Yahav mainly)

// get the announcement bar with the data from the customizer
let announcement = document.querySelector('.announcement-bar-container');

// get values of the sliders settings of the announcement bar
// and multiply them by 1000 to integrate them properly in the animation function
let announcementDuration = announcement.dataset.duration * 100;
let announcementDelay = announcement.dataset.delay * 1000;

// run animation only for mobile / tablet

/* This code will initially hide all the elements except for the first one, 
   which will have the active class. It then sets an interval to run every 4 seconds, 
   which will fade out the currently active element, remove its active class, 
   and fade in the next element in the list, adding the active class to it. 
   The index variable keeps track of which element is currently active, 
   and it wraps around to the beginning of the list when it reaches the end. */
if ($(window).width() < 990) {
  let elements = $('.announcement-bar');
  let index = 0;
  setInterval(function(e) {
    elements.eq(index).fadeOut(announcementDuration, function() {
      $(this).removeClass('active');
      index = (index + 1) % elements.length;
      elements.eq(index).fadeIn(announcementDuration).addClass('active');
    });
    console.log(e);
  }, announcementDelay);
}
});

{% endjavascript %}

{% schema %}
{
  "name": "t:sections.announcement-bar.name",
  "max_blocks": 12,
  "class": "announcement-bar-section",
  "settings": [
    {
      "type": "select",
      "id": "blocks_type",
      "options": [
        {
          "value": "row",
          "label": "t:sections.announcement-bar.settings.blocks_type.options__1.label"
        },
        {
          "value": "columns",
          "label": "t:sections.announcement-bar.settings.blocks_type.options__2.label"
        }
      ],
      "default": "row",
      "label": "t:sections.announcement-bar.settings.blocks_type.label"
    },
    {
      "type": "select",
      "id": "color_scheme",
      "options": [
        {
          "value": "accent-1",
          "label": "t:sections.all.colors.accent_1.label"
        },
        {
          "value": "accent-2",
          "label": "t:sections.all.colors.accent_2.label"
        },
        {
          "value": "background-1",
          "label": "t:sections.all.colors.background_1.label"
        },
        {
          "value": "background-2",
          "label": "t:sections.all.colors.background_2.label"
        },
        {
          "value": "inverse",
          "label": "t:sections.all.colors.inverse.label"
        }
      ],
      "default": "accent-1",
      "label": "t:sections.all.colors.label"
    },
    {
      "type": "range",
      "id": "animation-delay",
      "label": "Animation Delay",
      "min": 1,
      "max": 10,
      "step": 1,
      "default": 6
    },
    {
      "type": "range",
      "id": "animation-duration",
      "label": "Animation Duration",
      "min": 1,
      "max": 50,
      "step": 1,
      "default": 1
    }
  ],
  "blocks": [
    {
      "type": "announcement",
      "name": "t:sections.announcement-bar.blocks.announcement.name",
      "settings": [
        {
          "type": "checkbox",
          "id": "show_mobile",
          "default": true,
          "label": "t:sections.announcement-bar.blocks.announcement.settings.show_mobile.label"
        },
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>Welcome to our store</p>",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_alignment",
          "options": [
            {
              "value": "left",
              "label": "t:sections.announcement-bar.blocks.announcement.settings.text_alignment.options__1.label"
            },
            {
              "value": "center",
              "label": "t:sections.announcement-bar.blocks.announcement.settings.text_alignment.options__2.label"
            },
            {
              "value": "right",
              "label": "t:sections.announcement-bar.blocks.announcement.settings.text_alignment.options__3.label"
            }
          ],
          "default": "center",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.text_alignment.label"
        },
        {
          "type": "richtext",
          "id": "mobile_text",
          "default": "<p>Welcome to our store</p>",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.mobile_text.label"
        },
        {
          "type": "select",
          "id": "mobile_text_alignment",
          "options": [
            {
              "value": "left",
              "label": "t:sections.announcement-bar.blocks.announcement.settings.text_alignment.options__1.label"
            },
            {
              "value": "center",
              "label": "t:sections.announcement-bar.blocks.announcement.settings.text_alignment.options__2.label"
            },
            {
              "value": "right",
              "label": "t:sections.announcement-bar.blocks.announcement.settings.text_alignment.options__3.label"
            }
          ],
          "default": "center",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.text_alignment.label"
        },
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.announcement-bar.blocks.announcement.settings.link.label",
          "info": "t:sections.announcement-bar.blocks.announcement.settings.link.info"
        },
        {
          "type": "select",
          "id": "color_scheme",
          "options": [
            {
              "value": "accent-1",
              "label": "t:sections.all.colors.accent_1.label"
            },
            {
              "value": "accent-2",
              "label": "t:sections.all.colors.accent_2.label"
            },
            {
              "value": "background-1",
              "label": "t:sections.all.colors.background_1.label"
            },
            {
              "value": "background-2",
              "label": "t:sections.all.colors.background_2.label"
            },
            {
              "value": "inverse",
              "label": "t:sections.all.colors.inverse.label"
            }
          ],
          "default": "accent-1",
          "label": "t:sections.all.colors.label",
          "info": "t:sections.announcement-bar.blocks.announcement.settings.colors.info"
        }
      ]
    }
  ],
  "default": {
    "blocks": [
      {
        "type": "announcement"
      }
    ]
  }
}
{% endschema %}
